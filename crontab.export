# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command
MAILTO="prognose@met.fu-berlin.de"

# - Operational wetterturnier steps.

# - Prepare obs for tournament. Loading RAW observations
#   from database obs.bufr/obs.stations and stores them into
#   the wetterturnier plugin wpwt.wp_wetterturnier_obs
#   !!! Note that the script is running in a local virtual environment.
*/5 0,6,12,18 * * 5-7,1  cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 300 ionice -c 2 -n 0 python Observations.py > /home/wetterturnier/cronlog/Observations.log 

# - Chain: does everything necessary:
#   1) ComputeMeanBets (group bets)
#   2) ComputePetrus
#   3) ComputePoints     (computes the points for the players)
#   4) ComputeSleepy    (sleepy is based on the points of the players)
#   5) ComputeSumPoints  (computes sum of points - necessary for the ranking)
#   PLEASE NOTE: the source/activate is very important here as the Chain.py
#   starts ComputePoints, ComputeSumpoints and other scrpits. They are started
#   using "python" which has to be the python executable from the virtual
#   environment! Do not remove source venv/bin/activate unless you install
#   the pywetterturnier package into the system wide python library.
*/10 0,6,12,18 * * 5-7,1  cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 900 ionice -c 2 -n 0 python Chain.py > /home/wetterturnier/cronlog/Chain.log

#   Rerun: does the same as the Chain tool but for older tournaments.
#   If observations or bets are modified by hand in the admin interface
#   a log will be written into the database (wt_wetterturnier_replayrequest).
#   Rerun checks if there are old tournaments where the points have to be
#   recoputed and does this once in an hour (if required). Only requested
#   cities and tournament dates are started (more efficient than doing
#   all cities of a certain weekend if not required).
*/60 * * * * cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 3600 ionice -c 2 -n 0 python Rerun.py >> /home/wetterturnier/cronlog/Rerun.log

#   Compute Stats every Monday at 7:01 am (tdatestats and userstats)
5 7 * * 1 cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 3600 ionice -c 2 -n 0 python ComputeStats.py > /home/wetterturnier/cronlog/ComputeStats.log

#   Delete incomplete bets on Friday night 23 UTC
0 23 * * 5 cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 3600 ionice -c 2 -n 0 python CleanUpBets.py > /home/wetterturnier/cronlog/CleanUpBets.log

#   Recalculate AstralTable once a year at 1st January 00:00
0 0 1 1 *  cd /home/wetterturnier/wetterturnier-backend && source venv/bin/activate && timeout 3600 ionice -c 2 -n 0 python AstralTable.py > /home/wetterturnier/cronlog/AstralTable.log
